{
  "swagger": "2.0",
  "info": {
    "title": "Clothing Store API",
    "description": "Final assignment for CSE341",
    "version": "1.0.0"
  },
  "host": "localhost:8080",
  "basePath": "/",
  "schemes": ["http", "https"],
  "paths": {
    "/login": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Authenticate User using Github. Cannot be done from here. Visit /login",
        "description": "This endpoint is used to login.",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/logout": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Logout Authenticated User. Cannot be done from here. Visit /logout",
        "description": "This endpoint is used to logout.",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/reviews/": {
      "get": {
        "tags": ["Reviews"],
        "summary": "GET all",
        "description": "",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": ["Reviews"],
        "description": "This endpoint requires authentication. For logging in visit '/auth' page.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "example": "any"
                },
                "productId": {
                  "example": "any"
                },
                "rating": {
                  "example": "any"
                },
                "comment": {
                  "example": "any"
                },
                "reviewDate": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/reviews/{id}": {
      "get": {
        "tags": ["Reviews"],
        "summary": "GET by id",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": ["Reviews"],
        "description": "This endpoint requires authentication. For logging in visit '/auth' page.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "example": "any"
                },
                "productId": {
                  "example": "any"
                },
                "rating": {
                  "example": "any"
                },
                "comment": {
                  "example": "any"
                },
                "reviewDate": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": ["Reviews"],
        "description": "This endpoint requires authentication. For logging in visit '/auth' page.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/": {
      "get": {
        "tags": ["Users"],
        "summary": "Retrieve a list of all users",
        "description": "Must be Authenticated via Github 1st. This endpoint retrieves all users available in the database.",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": ["Users"],
        "summary": "Create a new user",
        "description": "Must be Authenticated via Github 1st. This endpoint creates a new user in the database.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Add new user.",
            "schema": {
              "$ref": "#/definitions/CreateUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": ["Users"],
        "summary": "Get an user by ID",
        "description": "Must be Authenticated via Github 1st. This endpoint retrieves a specific user by its ID.",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "value": "650c5812c06bc031e32200a1"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": ["Users"],
        "summary": "Update an existing user",
        "description": "Must be Authenticated via Github 1st. This endpoint updates an existing user in the database.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Add new user.",
            "schema": {
              "$ref": "#/definitions/UpdateUser"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        }
      },
      "delete": {
        "tags": ["Users"],
        "summary": "Delete an user",
        "description": "Must be Authenticated via Github 1st. This endpoint deletes a specific user by its ID from the database.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/orders/": {
      "get": {
        "tags": ["orders"],
        "summary": "Retrieve a list of all orders",
        "description": "Must be Authenticated via Github 1st. This endpoint retrieves all orders available in the database.",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": ["orders"],
        "summary": "Create a new order",
        "description": "Must be Authenticated via Github 1st. This endpoint creates a new order in the database.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Add new order.",
            "schema": {
              "$ref": "#/definitions/Createorder"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/orders/{id}": {
      "get": {
        "tags": ["orders"],
        "summary": "Get an order by ID",
        "description": "Must be Authenticated via Github 1st. This endpoint retrieves a specific order by its ID.",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "value": "650c5812c06bc031e32200a1"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": ["orders"],
        "summary": "Update an existing order",
        "description": "Must be Authenticated via Github 1st. This endpoint updates an existing order in the database.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Add new order.",
            "schema": {
              "$ref": "#/definitions/Updateorder"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        }
      },
      "delete": {
        "tags": ["orders"],
        "summary": "Delete an order",
        "description": "Must be Authenticated via Github 1st. This endpoint deletes a specific order by its ID from the database.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  },
  "definitions": {
    "CreateUser": {
      "type": "object",
      "properties": {
        "fName": {
          "type": "string",
          "example": "MyFirstName"
        },
        "lName": {
          "type": "string",
          "example": "MyLastName"
        },
        "email": {
          "type": "string",
          "example": "me@example.com"
        },
        "phone": {
          "type": "string",
          "example": "123-456-0911"
        },
        "address": {
          "type": "string",
          "example": "123 My Place"
        },
        "role": {
          "type": "string",
          "example": "customer"
        }
      }
    },
    "UpdateUser": {
      "type": "object",
      "properties": {
        "fName": {
          "type": "string",
          "example": "MyFirstName"
        },
        "lName": {
          "type": "string",
          "example": "MyLastName"
        },
        "email": {
          "type": "string",
          "example": "me@example.com"
        },
        "phone": {
          "type": "string",
          "example": "123-456-0911"
        },
        "address": {
          "type": "string",
          "example": "123 My Place"
        },
        "role": {
          "type": "string",
          "example": "admin"
        }
      }
    }
  }
}
